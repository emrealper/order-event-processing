version: "3.8"

networks:
  mynetwork:
     driver: bridge

services:

 zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    networks:
       - mynetwork 
    ports:
     - "2888:2888"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2888
      ZOOKEEPER_TICK_TIME: 2000

 broker:
    image: confluentinc/cp-server
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    networks:
       - mynetwork   
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2888'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
   
 ordersqlserverdb:
        container_name: ordersqlserverdb
        build: ./sql-server-docker/
        environment:
            SA_PASSWORD: msSqlserver123
            ACCEPT_EULA: "Y"
            MSSQL_AGENT_ENABLED: "true"
        ports:
            - 1439:1433
        networks:
           - mynetwork 
        volumes:
            - ms-sqlserver-linux-data:/var/opt/mssql:rw
 
 orderconsumer:
    image: orderconsumer_rc
    hostname: "orderconsumer"
    container_name: orderconsumer
    depends_on:
       - ordersqlserverdb
       - broker
    ports:
      - "5001:80"  
    networks:
       - mynetwork 
    deploy:
        resources:
            limits:
              cpus: '2.0'
              memory: 512M
            reservations:
              cpus: '1.0'
              memory: 512M   
  
 orderproducer:
    image: orderproducer_rc
    hostname: "orderproducer"
    container_name: orderproducer
    depends_on:
      - broker
    ports:
      - "5000:80"
    networks:
       - mynetwork   
    deploy:
        resources:
            limits:
              cpus: '2.0'
              memory: 512M
            reservations:
              cpus: '2.0'
              memory: 512M  
 logserver:
    image: datalust/seq:latest
    container_name: logserver
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y               
  
           
            
volumes:
    ms-sqlserver-linux-data:
        driver: local
